---
# Current Version of the config
version: 1.0

# PiAutomator section, basic config of the automator
automator:
  save-state: true # save the state of the context after stop (loaded on restart), default true

# Configure graphite if you have it. if not, set enabled to false
graphite:
  host: 127.0.0.1
  port: 2003
  enabled: true # Send data to graphite? default false

# piligth section. Required if you add pilight inputs or receivers
pilight:
  host: 127.0.0.1
  port: 5000

llap:
  device: /dev/ttyAMA0 # the serial device to connect to, /dev/ttyAMA0 is the default
  print-debug: true # Print incoming serial traffic to a debug file. Default is false. Check the logoutput for the file location

receivers:

  # Simple example of a ToolCommandReceiver that calls echo
  echosomething:
    type: ToolCommandReceiver
    command: echo
    args: ${name} is now ${state}
    intools: false # will look in the tools directory of the piautomator project if this is true
    any-state: true #

  alwaysechosomething:
        type: ToolCommandReceiver
        command: echo
        args: ${name} is now ${state}
        intools: false # will look in the tools directory of the piautomator project if this is true
        any-state: true # supports any state (otherwise it will support only on/off or whatever your specific receiver subclass defines as states
        maintain-state: false # If false, then the receiver will not check if state has changed (see also 'always' on rules)

  # Send a notification to PROWL, you can send yourself a notification when something important happens
  notification:
    type: ProwlReceiver
    api-key: <MY-Awesome-Prowl-api-key>
    application: homeautomation
    any-state: true

  # Direct KlikAanKlikUit receiver (old protocol), native python implementation.
  homefan:
    type: KlikAanKlikUitReceiver
    address: A
    device: 1

  # Same receiver, but then using a pilight config.
  # translate-up-down is usefull for old kaku protocols that
  # pilight treats as up/down state wheras it treats new protocols as on/off
  homefan:
    translate-up-down: true
    type: PiLight
    location: home
    device: homefan

  # Receiver of type LLAP. Usefull for wireless sensing lowlevel inputs
  # Known LLAP values get translated into context values automatically
  outside1:
    type: LLAP
    device-id: AA

inputs:

  # Direct DHT22 input
  bathroom:
    type: DHT22
    pin: 4

  # DHT22 input through pilight
  # In this case you can add a scale to lower it from 171 to 17.1 degrees etc. You don't have to
  bathroom:
     type: PiLight
     location: bathroom
     device: h_t_sensor
     scale: 0.1

   #Special pilight input. If you define this one, it will be the default for all pilight events if there is
   #no specific one for the given location and device.
   #Values are made available for rules under pilight.<location>.<device>.<metric>
   # for instance pilight.livingroom.christmastree.state
   # or pilight.bathrool.h_t_sensor.humidity etc
   all-pilight:
     type: PiLight
     location: all
     device: all

rules:
  - when bathroom.humidity is greater than 57 then turn homefan on and send notification "Homefan is on" and print echosomething on
  - when bathroom.humidity is less than 55 then turn homefan off and send notification "Homefan is off" and print echosomething off
  - when pilight.frontgarden.lightsensor.level less than 44 then turn outsidelights on
  # Note the always prefix below. Normally a rule will only fire if it didn't match the previous eval.
  # With the always prefix it will fire everytime one of the conditions has an updated value and the rule matches, even
  # if it already fired the previous run. In this case every sensor reading above 65 will result in a 'boring3' echo all the time.
  - always when bathroom.humidity is less than 65 then turn homefan off and print alwaysechosomething "boring3"
  # This one has always on action level too. actions in this mode are always performed even if the receiver state doesnt
  # change. Note that receiver state is global, not rule local. So a receiver used in multiple rules might naturally already
  # exhibit always like behaviour
  - always when bathroom.humidity is less than 65 then always turn homefan off and print echosomething "boring3"
  - every day at 22:00 turn homefan on
  - every day at 22:01 turn homefan off
  - every wednesday and friday at 22:01 turn homefan off